////////////////////////////////////////////////////////////////////////////////
//
//    Copyright (c) 2022 - 2023.
//    Haixing Hu, Qubit Ltd.
//
//    All rights reserved.
//
////////////////////////////////////////////////////////////////////////////////
package ltd.qubit.commons.random.randomizers.text;

import ltd.qubit.commons.random.Context;
import ltd.qubit.commons.random.api.ContextAwareRandomizer;
import ltd.qubit.commons.random.api.Randomizer;

import static java.lang.String.valueOf;

/**
 * A {@link Randomizer} that stringify values generated by a delegate {@link
 * Randomizer}.
 *
 * @author Mahmoud Ben Hassine, Haixing Hu
 */
public class StringDelegatingRandomizer implements ContextAwareRandomizer<String> {

  private final Randomizer<?> delegate;

  /**
   * Create a new {@link StringDelegatingRandomizer}.
   *
   * @param delegate
   *         the delegate {@link Randomizer}
   */
  public StringDelegatingRandomizer(final Randomizer<?> delegate) {
    this.delegate = delegate;
  }

  @Override
  public void setContext(final Context context) {
    if (delegate instanceof ContextAwareRandomizer) {
      ((ContextAwareRandomizer) delegate).setContext(context);
    }
  }

  @Override
  public String getRandomValue() {
    return valueOf(delegate.getRandomValue());
  }
}
